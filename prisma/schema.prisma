generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Depot {
  id         Int         @id @default(autoincrement())
  code       String      @unique
  address    String
  phone      String
  fax        String
  managerId  String      // Change to String to match User.id
  manager    User        @relation(fields: [managerId], references: [id])
  equipments Equipment[] // One-to-many relationship
  contracts  Contract[]  // One-to-many relationship
}


model Equipment {
  id           Int          @id @default(autoincrement())
  code         String       @unique
  name         String
  categoryId   Int
  category     Category     @relation(fields: [categoryId], references: [id])
  state        EquipmentState
  capacity     Float
  dailyPrice   Float
  depotId      Int
  depot        Depot        @relation(fields: [depotId], references: [id])
  suppliers    Supplier[]   // Many-to-many relationship with Supplier
  contractEquipments ContractEquipment[] // Many-to-many relationship with Contract
}

model Category {
  id          Int          @id @default(autoincrement())
  code        String       @unique
  designation String
  equipments  Equipment[]  // One-to-many relationship
}

model Supplier {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  name       String
  surname    String
  address    String
  phone      String
  fax        String
  email      String
  equipments Equipment[] // Many-to-many relationship with Equipment
}

model Client {
  id             Int          @id @default(autoincrement())
  name           String
  surname        String
  address        String
  phone          String
  fiscalNumber   String
  fax            String
  email          String
  contracts      Contract[]   // One-to-many relationship with Contract
}

model Contract {
  id            Int             @id @default(autoincrement())
  number        String          @unique
  date          DateTime
  clientId      Int
  client        Client          @relation(fields: [clientId], references: [id])
  depotId       Int
  depot         Depot           @relation(fields: [depotId], references: [id])
  equipments    ContractEquipment[] // Many-to-many relationship with Equipment
  totalAmount   Float
  status        ContractStatus  // Enum for contract status
}

model ContractEquipment {
  id             Int       @id @default(autoincrement())
  contractId     Int
  contract       Contract  @relation(fields: [contractId], references: [id])
  equipmentId    Int
  equipment      Equipment @relation(fields: [equipmentId], references: [id])
  rentalDays     Int
  price          Float
}

model User {
  id      String   @id
  email   String   @unique
  name    String?
  avatar  String?  // Added field for avatar
  cover   String?  // Added field for cover
  depots  Depot[]  // One-to-many relationship with Depot
}

enum EquipmentState {
  NEW
  USED
  DAMAGED
}

enum ContractStatus {
  ACTIVE
  CANCELLED
  COMPLETED
}

enum UserRole {
  DIRECTOR
  MANAGER
}
